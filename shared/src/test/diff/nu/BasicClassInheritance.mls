:NewDefs


class A
//│ class A

class B(m: Int) extends A
//│ class B(m: Int) extends A


class A(n: Int)
//│ class A(n: Int)

class B(m: Int) extends A(m + 1)
//│ class B(m: Int) extends A


class A {
  fun a1: Int
  fun a1 = 1
  fun a2 = 2
}
//│ class A {
//│   fun a1: Int
//│   fun a2: 2
//│ }

class B extends A
//│ class B extends A {
//│   fun a1: Int
//│   fun a2: 2
//│ }


// * Interestingly, we can currently inherit from modules...

module C { fun test = 0 }
//│ module C {
//│   fun test: 0
//│ }

class D() extends C
//│ class D() extends C {
//│   fun test: 0
//│ }

D().test
//│ 0
//│ res
//│     = 0


